package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	"github.com/olzzhas/narxozer/graph/generated"
	"github.com/olzzhas/narxozer/graph/model"
)

// HealthCheck is the resolver for the healthCheck field.
func (r *queryResolver) HealthCheck(ctx context.Context) (string, error) {
	return "OK", nil
}

var UserDataStore = map[string]*model.User{
	"1": {ID: "1", Name: "Olzhas Mukhanbetzhan", Email: "olzhas@gmail.com"},
	"2": {ID: "2", Name: "Jandos Kazenov", Email: "jandoskazenov@gmail.com"},
}

func (r *queryResolver) GetUser(ctx context.Context, id string) (*model.User, error) {
	user, exists := UserDataStore[id]
	if !exists {
		return nil, fmt.Errorf("user with ID %s not found", id)
	}
	return user, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
